{"SurveyEntry":{"SurveyID":"SV_efcvIBK5m2Bdfgx","SurveyName":"Chat with waiting room (single stage, 2) TEMPLATE 5-28-2020","SurveyDescription":null,"SurveyOwnerID":"UR_9EUlTzKmzcqukcZ","SurveyBrandID":"cmu","DivisionID":"DV_57PaEoTh8tNhyXb","SurveyLanguage":"EN","SurveyActiveResponseSet":"RS_9NBbEqtJwK7ifBj","SurveyStatus":"Active","SurveyStartDate":"0000-00-00 00:00:00","SurveyExpirationDate":"0000-00-00 00:00:00","SurveyCreationDate":"2020-05-28 10:50:58","CreatorID":"UR_9EUlTzKmzcqukcZ","LastModified":"2020-05-28 11:24:22","LastAccessed":"0000-00-00 00:00:00","LastActivated":"2020-05-28 11:01:48","Deleted":null},"SurveyElements":[{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"BL","PrimaryAttribute":"Survey Blocks","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"1":{"Type":"Trash","Description":"Trash \/ Unused Questions","ID":"BL_3RhGWWHeqrkI0bb","BlockElements":[]},"11":{"Type":"Standard","SubType":"","Description":"Intro","ID":"BL_56ysrnreTGNy2Sp","BlockElements":[{"Type":"Question","QuestionID":"QID6"}],"Options":{"BlockLocking":"false","RandomizeQuestions":"false","PreviousButton":"","previousButtonMID":"","NextButton":"Start Experiment","nextButtonMID":"","previousButtonLibraryID":"","nextButtonLibraryID":""}},"17":{"Type":"Standard","SubType":"","Description":"MATCH BLOCK -NR","ID":"BL_1LJSioNttYQ34GN","BlockElements":[{"Type":"Question","QuestionID":"QID7"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID8"},{"Type":"Question","QuestionID":"QID9"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID10","SkipLogic":[{"SkipLogicID":1,"ChoiceLocator":"q:\/\/QID10\/DisplayableQuestion\/1","Condition":"Displayed","SkipToDestination":"ENDOFSURVEY","Locator":"q:\/\/QID10\/ChoiceDisplayed","SkipToDescription":"&nbsp; <strong>&nbsp;<\/strong>  <strong>Is Displayed<\/strong>","Description":"Condition: <strong title=\"&nbsp;\">&nbsp;<\/strong> <strong>Is Displayed<\/strong>. Skip To: <strong>End of Survey<\/strong>.","QuestionID":"QID10"}]}],"Options":{"BlockLocking":false,"RandomizeQuestions":"false","BlockVisibility":"Expanded"}},"18":{"Type":"Standard","Description":"CHAT BLOCK - NR","ID":"BL_a3HxoL5WZw4DIsl","BlockElements":[{"Type":"Question","QuestionID":"QID11"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID12"}],"Options":{"BlockLocking":false,"RandomizeQuestions":"false","BlockVisibility":"Expanded"}},"19":{"Type":"Standard","SubType":"","Description":"COMPLETE BLOCK - NR","ID":"BL_1FgtD0YthKy8zTn","BlockElements":[{"Type":"Question","QuestionID":"QID13"}]},"21":{"Type":"Standard","SubType":"","Description":"SEND BLOCK","ID":"BL_9XqTnQl4CUjBK6N","BlockElements":[{"Type":"Question","QuestionID":"QID14"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID15","SkipLogic":[{"SkipLogicID":1,"ChoiceLocator":"q:\/\/QID15\/DisplayableQuestion\/1","Condition":"Displayed","SkipToDestination":"ENDOFSURVEY","Locator":"q:\/\/QID15\/ChoiceDisplayed","SkipToDescription":"Click to write the question... <strong>Click to write the question...<\/strong>  <strong>Is Displayed<\/strong>","Description":"Condition: <strong title=\"Click to write the question text\">Click to write the question...<\/strong> <strong>Is Displayed<\/strong>. Skip To: <strong>End of Survey<\/strong>.","QuestionID":"QID15"}]}],"Options":{"BlockLocking":false,"RandomizeQuestions":"false","BlockVisibility":"Expanded"}},"22":{"Type":"Standard","SubType":"","Description":"GET BLOCK","ID":"BL_3ZO6CZ6xrP9DSo5","BlockElements":[{"Type":"Question","QuestionID":"QID16"},{"Type":"Question","QuestionID":"QID17"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID18","SkipLogic":[{"SkipLogicID":1,"ChoiceLocator":"q:\/\/QID18\/DisplayableQuestion\/1","Condition":"Displayed","SkipToDestination":"ENDOFSURVEY","Locator":"q:\/\/QID18\/ChoiceDisplayed","SkipToDescription":"terminated <strong>terminated<\/strong>  <strong>Is Displayed<\/strong>","Description":"Condition: <strong title=\"terminated\">terminated<\/strong> <strong>Is Displayed<\/strong>. Skip To: <strong>End of Survey<\/strong>.","QuestionID":"QID18"}]}]},"23":{"Type":"Standard","SubType":"","Description":"Instructions","ID":"BL_3qpRUB4rUmnqVrn","BlockElements":[{"Type":"Question","QuestionID":"QID19"}]}}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"FL","PrimaryAttribute":"Survey Flow","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"Type":"Root","FlowID":"FL_1","Flow":[{"Type":"EmbeddedData","FlowID":"FL_2","EmbeddedData":[{"Description":"researcherID","Type":"Recipient","Field":"researcherID","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"studyID","Type":"Recipient","Field":"studyID","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"groupID","Type":"Recipient","Field":"groupID","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"participantID","Type":"Custom","Field":"participantID","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"${e:\/\/Field\/ResponseID}"},{"Description":"groupSize","Type":"Custom","Field":"groupSize","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"2"},{"Description":"numStages","Type":"Custom","Field":"numStages","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"},{"Description":"roles","Type":"Custom","Field":"roles","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"A,B"},{"Description":"participantRole","Type":"Custom","Field":"participantRole","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"random"},{"Description":"timeOutLog","Type":"Recipient","Field":"timeOutLog","VariableType":"String","DataVisibility":[],"AnalyzeText":false}]},{"Type":"EmbeddedData","FlowID":"FL_3","EmbeddedData":[{"Description":"botMatch","Type":"Custom","Field":"botMatch","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"no"},{"Description":"matchAlert","Type":"Custom","Field":"matchAlert","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"yes"}]},{"Type":"Block","ID":"BL_56ysrnreTGNy2Sp","FlowID":"FL_4"},{"Type":"Block","ID":"BL_1LJSioNttYQ34GN","FlowID":"FL_5"},{"Type":"Standard","ID":"BL_3qpRUB4rUmnqVrn","FlowID":"FL_17"},{"Type":"EmbeddedData","FlowID":"FL_13","EmbeddedData":[{"Description":"participantStatus","Type":"Custom","Field":"participantStatus","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"ready"},{"Description":"sendData","Type":"Custom","Field":"sendData","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"participantStatus"},{"Description":"sendStage","Type":"Custom","Field":"sendStage","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"}]},{"Type":"Block","ID":"BL_9XqTnQl4CUjBK6N","FlowID":"FL_14"},{"Type":"EmbeddedData","FlowID":"FL_15","EmbeddedData":[{"Description":"getStage","Type":"Custom","Field":"getStage","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"},{"Description":"getData","Type":"Custom","Field":"getData","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"A,B"},{"Description":"saveData","Type":"Custom","Field":"saveData","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"null,null"},{"Description":"getWaitText","Type":"Custom","Field":"getWaitText","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"Please wait for the other participant. The chat will start soon."},{"Description":"freezeTime","Type":"Custom","Field":"freezeTime","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"}]},{"Type":"Block","ID":"BL_3ZO6CZ6xrP9DSo5","FlowID":"FL_16"},{"Type":"EmbeddedData","FlowID":"FL_6","EmbeddedData":[{"Description":"chatLog","Type":"Custom","Field":"chatLog","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"text"}]},{"Type":"EmbeddedData","FlowID":"FL_7","EmbeddedData":[{"Description":"chatName","Type":"Custom","Field":"chatName","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"chatLog"}]},{"Type":"Block","ID":"BL_a3HxoL5WZw4DIsl","FlowID":"FL_8"},{"Type":"Block","ID":"BL_1FgtD0YthKy8zTn","FlowID":"FL_9"}],"Properties":{"Count":17,"RemovedFieldsets":[]}}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SO","PrimaryAttribute":"Survey Options","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"BackButton":"false","SaveAndContinue":"false","SurveyProtection":"PublicSurvey","BallotBoxStuffingPrevention":"false","NoIndex":"Yes","SecureResponseFiles":"true","SurveyExpiration":null,"SurveyTermination":"DisplayMessage","Header":"<script>\n\nQualtrics.SurveyEngine.addOnload(function()\n{\ndocument.getElementById(\"Plug\").remove();\n\n});\n\n<\/script>","Footer":"","ProgressBarDisplay":"None","PartialData":"+1 week","ValidationMessage":null,"PreviousButton":" \u2190 ","NextButton":"Next >>","SkinLibrary":"cmu","SkinType":"templated","Skin":{"brandingId":null,"templateId":"*base","overrides":{"questionText":{"size":"16px"},"answerText":{"size":"14px"}}},"NewScoring":1,"CustomStyles":{"customCSS":".Skin .QuestionOuter {\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    padding-bottom: 10px;\n}\n"},"headerMid":"","EOSMessage":"MS_aYuRM60Sih3GuZT","ShowExportTags":"false","CollectGeoLocation":"false","SurveyTitle":"Online Survey Software | Qualtrics Survey Solutions","SurveyMetaDescription":"Qualtrics sophisticated online survey software solutions make creating online surveys easy. Learn more about Research Suite and get a free account today.","PasswordProtection":"No","AnonymizeResponse":"No","Password":"","RefererCheck":"No","RefererURL":"http:\/\/","RecaptchaV3":"false","RelevantID":"false","ResponseSummary":"No","EOSMessageLibrary":"UR_9EUlTzKmzcqukcZ","EOSRedirectURL":"https:\/\/","EmailThankYou":"false","ThankYouEmailMessageLibrary":null,"ThankYouEmailMessage":null,"ValidateMessage":"false","ValidationMessageLibrary":null,"InactiveSurvey":"DefaultMessage","PartialDataCloseAfter":"LastActivity","ActiveResponseSet":null,"InactiveMessageLibrary":"","InactiveMessage":"","AvailableLanguages":{"EN":[]},"ProtectSelectionIds":true,"PageTransition":"fade"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SCO","PrimaryAttribute":"Scoring","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"ScoringCategories":[],"ScoringCategoryGroups":[],"ScoringSummaryCategory":null,"ScoringSummaryAfterQuestions":0,"ScoringSummaryAfterSurvey":0,"DefaultScoringCategory":null,"AutoScoringCategory":null}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"PROJ","PrimaryAttribute":"CORE","SecondaryAttribute":null,"TertiaryAttribute":"1.1.0","Payload":{"ProjectCategory":"CORE","SchemaVersion":"1.1.0"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"STAT","PrimaryAttribute":"Survey Statistics","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"MobileCompatible":true,"ID":"Survey Statistics"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID10","SecondaryAttribute":" ","TertiaryAttribute":null,"Payload":{"QuestionText":"&nbsp;","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":" ","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"DisplayLogic":{"0":{"0":{"LogicType":"EmbeddedField","LeftOperand":"timeOutLog","Operator":"Contains","RightOperand":"terminated","Type":"Expression","Description":"<span class=\"ConjDesc\">If<\/span>  <span class=\"LeftOpDesc\">timeOutLog<\/span> <span class=\"OpDesc\">Contains<\/span> <span class=\"RightOpDesc\"> terminated <\/span>"},"Type":"If"},"Type":"BooleanExpression","inPage":false},"QuestionText_Unsafe":"&nbsp;","DataExportTag":"terminate","QuestionID":"QID10","QuestionJS":"Qualtrics.SurveyEngine.addOnload(function()\n{\nvar that = this;\nthis.hideNextButton();\nthat.clickNextButton();\n});","DataVisibility":{"Private":false,"Hidden":false}}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID13","SecondaryAttribute":" ","TertiaryAttribute":null,"Payload":{"QuestionText":"<div style=\"text-align: center;\"><img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><\/div>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":" ","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"DataVisibility":{"Private":false,"Hidden":false},"QuestionText_Unsafe":"<div style=\"text-align: center;\"><img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><\/div>","DataExportTag":"complete","QuestionID":"QID13","QuestionJS":"\/* \n\nCopyright 2018 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published: Molnar, A. (2018). \u201cSMARTRIQS: A Simple Method Allowing \nReal-Time Respondent Interaction in Qualtrics Surveys\". Retrieved from https:\/\/smartriqs.com\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\nvar page = this; page.hideNextButton();\nconsole.log(\"Begin COMPLETE\");\n\n\/\/ Get values from Qualtrics\nif (\"${e:\/\/Field\/serverURL}\" == false) {\n\tvar serverURL = \"https:\/\/server.smartriqs.com\/php\";\n\tconsole.log(\"Default server\");\n} \nelse{\t\/\/ use custom server URL if serverURL is defined in Qualtrics\n\tvar serverURL = \"${e:\/\/Field\/serverURL}\";\n\tconsole.log(\"Custom server: \" + serverURL);\n}\t\nvar timeOutLog = \tQualtrics.SurveyEngine.getEmbeddedData(\"timeOutLog\");\nif (timeOutLog == \"null\") {\tQualtrics.SurveyEngine.setEmbeddedData( \"timeOutLog\", \"OK -- no issues\");}\nelse {\tQualtrics.SurveyEngine.setEmbeddedData( \"timeOutLog\", timeOutLog.substring(4));}\n\n\/\/ Initialize parameters\nvar request = new httpRequest();\nrequest.method = \"GET\";\n\nmakeRequest();\n\nfunction makeRequest() {\n\trequest.url = serverURL + \"\/complete.php\" +\n\t\"?researcherID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"researcherID\") + \n\t\"&studyID=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"studyID\") + \n\t\"&participantID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"participantID\") + \n\t\"&groupSize=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") + \n\t\"&numStages=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"numStages\");\n\t\n\t\/\/ Create callback for success containing the response\n\trequest.success = function(response){console.log(\"COMPLETE succesful\"); page.clickNextButton();};\n\n\t\/\/ Create a fail callback containing the error\n\trequest.fail = function(error){console.log(error);};\n\n\t\/\/ Send request\n\trequest.send();\n}\n\n\n\/\/ HTTP request (AJAX)\nfunction httpRequest()\n{\n    var ajax = null,\n        response = null,\n        self = this;\n\n    this.method = null;\n    this.url = null;\n    this.async = true;\n    this.data = null;\n\n    this.send = function()\n    {\n        ajax.open(this.method, this.url, this.asnyc);\n        ajax.send(this.data);\n    };\n\n    if(window.XMLHttpRequest)\n    {\n        ajax = new XMLHttpRequest();\n    }\n    else if(window.ActiveXObject)\n    {\n        try\n        {\n            ajax = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch(e)\n        {\n            try\n            {\n                ajax = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch(ee)\n            {\n                self.fail(\"not supported\");\n            }\n        }\n    }\n\n    if(ajax == null)\n    {\n        return false;\n    }\n\n    ajax.onreadystatechange = function()\n    {\n        if(this.readyState == 4)\n        {\n            if(this.status == 200)\n            {\n                self.success(this.responseText);\n            }\n            else\n            {\n                self.fail(this.status + \" - \" + this.statusText);\n            }\n        }\n    };\n}\n});"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID14","SecondaryAttribute":" ","TertiaryAttribute":null,"Payload":{"QuestionText":"<div id=\"infoBox\" style=\"text-align: center;\"><img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><\/div>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":" ","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"QuestionJS":"\/* \n\nCopyright 2019 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published:\n\nMolnar, A. (2019). \n\u201cSMARTRIQS: A Simple Method Allowing Real-Time Respondent Interaction in Qualtrics Surveys\". \nJournal of Behavioral and Experimental Finance, 22, 161-169. doi: 10.1016\/j.jbef.2019.03.005\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\nvar page = this; page.hideNextButton();\t\t\t\t\nconsole.log(\"Begin SEND\");\n\n\/\/ Get parameters from Qualtrics\nif (\"${e:\/\/Field\/serverURL}\" == false) {\n\tvar serverURL = \"https:\/\/server.smartriqs.com\/php\";\n\tconsole.log(\"Default server\");\n} \nelse{\t\/\/ use custom server URL if serverURL is defined in Qualtrics\n\tvar serverURL = \"${e:\/\/Field\/serverURL}\";\n\tconsole.log(\"Custom server: \" + serverURL);\n}\t\nvar freezeTime \t\t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"freezeTime\"));\n\tif (freezeTime > 30 || freezeTime < 1 \t|| isNaN(freezeTime)) \t\t{freezeTime = 3;}\t\/\/ use default if too high or too low\nvar sendData = encodeURIComponent(Qualtrics.SurveyEngine.getEmbeddedData(Qualtrics.SurveyEngine.getEmbeddedData(\"sendData\")));\n\tif (sendData == \"[.....]\")\t{sendData = \"N\/A\";}\n\nif (\"${e:\/\/Field\/terminateText}\" == false){\n\tvar terminateText = \"The survey has been terminated. Please contact the researcher to receive partial compensation for your participation.\";\n}\nelse{\n\tvar terminateText = \"${e:\/\/Field\/terminateText}\";\n\tconsole.log(\"Terminate text set manually: \" + terminateText);\n}\t\n\t\n\/\/ Initialize variables\nvar status = \"null\";\nvar errorCount = 0;\nvar valueInDatabase = \"\";\nvar request = new httpRequest();\nrequest.method = \"GET\";\n\nmakeRequest();\n\n\/\/ This function sends data to the server\nfunction makeRequest() {\n\trequest.url = serverURL + \"\/send.php\" +\n\t\"?researcherID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"researcherID\") + \n\t\"&studyID=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"studyID\") + \n\t\"&participantID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"participantID\") + \n\t\"&groupSize=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") + \n\t\"&timeZone=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"timeZone\") +\n\t\"&numStages=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"numStages\") + \n\t\"&sendStage=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"sendStage\") + \n\t\"&timeOutLog=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"timeOutLog\") + \n\t\"&sendValue=\" \t\t+ sendData;\n\t\n\t\/\/ Create callback for success containing the response\n\trequest.success = function(response)\n\t{\n\t\tvar resp = response;\n\t\tvar parser = new DOMParser()\n\t\tvar parsed = parser.parseFromString(resp,\"text\/html\");\n\t\tstatus = parsed.getElementsByTagName(\"status\")[0].innerHTML;\n\t\tvalueInDatabase = parsed.getElementsByTagName(\"valueInDatabase\")[0].innerHTML;\n\t\terrorCount = parsed.getElementsByTagName(\"errorCount\")[0].innerHTML;\n\t\ttimeOutLog = parsed.getElementsByTagName(\"timeOutLog\")[0].innerHTML;\n\t\t\n\t\t\/\/ Save the retrieved value to Qualtrics\t\n\t\tQualtrics.SurveyEngine.setEmbeddedData( Qualtrics.SurveyEngine.getEmbeddedData(\"sendData\") , valueInDatabase );\n\n\t\t\/\/ Check if there was any error. If yes, display text\n\t\tif (errorCount > 0) {document.getElementById(\"infoBox\").innerHTML = status;}\n\t\t\n\t\t\/\/ Otherwise, check if this participant timed out\n\t\telse {\n\t\t\tif (status == \"timed out\") {\n\t\t\t\tif (valueInDatabase == \"terminated\"){\n\t\t\t\t\tdocument.getElementById(\"infoBox\").innerHTML = \"You have been inactive for too long.<br><br>\" + terminateText;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdocument.getElementById(\"infoBox\").innerHTML = \"You have been inactive for too long.<br>In order to let the other participant(s) continue the study,<br>the computer has generated a response for you: \" + valueInDatabase + \"<br><br>You can continue the study.\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\/\/ If there was a timeout, do not automatically proceed to the next page. Display warning message then show next button after a short delay\n\t\t\t\tQualtrics.SurveyEngine.setEmbeddedData( \"timeOutLog\", timeOutLog );\n\t\t\t\tsetTimeout(function () {page.showNextButton();}, 1000 * freezeTime);\n\t\t\t}\n\t\t\t\/\/ Otherwise proceed to next page\n\t\t\telse {\n\t\t\t\tconsole.log(\"SEND successful\");\n\t\t\t\tpage.clickNextButton();\n\t\t\t}\n\t\t}\n\t};\n\n\t\/\/ Create a fail callback containing the error\n\trequest.fail = function(error){\tconsole.log(error);\t};\n\n\t\/\/ Send request\n\trequest.send();\n}\n\n\n\/\/ HTTP request (AJAX) function\nfunction httpRequest()\n{\n    var ajax = null,\n        response = null,\n        self = this;\n\n    this.method = null;\n    this.url = null;\n    this.async = true;\n    this.data = null;\n\n    this.send = function()\n    {\n        ajax.open(this.method, this.url, this.asnyc);\n        ajax.send(this.data);\n    };\n\n    if(window.XMLHttpRequest)\n    {\n        ajax = new XMLHttpRequest();\n    }\n    else if(window.ActiveXObject)\n    {\n        try\n        {\n            ajax = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch(e)\n        {\n            try\n            {\n                ajax = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch(ee)\n            {\n                self.fail(\"not supported\");\n            }\n        }\n    }\n\n    if(ajax == null)\n    {\n        return false;\n    }\n\n    ajax.onreadystatechange = function()\n    {\n        if(this.readyState == 4)\n        {\n            if(this.status == 200)\n            {\n                self.success(this.responseText);\n            }\n            else\n            {\n                self.fail(this.status + \" - \" + this.statusText);\n            }\n        }\n    };\n}\n});","NextChoiceId":1,"NextAnswerId":1,"QuestionText_Unsafe":"<div id=\"infoBox\" style=\"text-align: center;\"><img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><\/div>","DataExportTag":"send","QuestionID":"QID14"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID15","SecondaryAttribute":" ","TertiaryAttribute":null,"Payload":{"QuestionText":"&nbsp;","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":" ","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"DisplayLogic":{"0":{"0":{"LogicType":"EmbeddedField","LeftOperand":"timeOutLog","Operator":"Contains","RightOperand":"terminated","Type":"Expression","Description":"<span class=\"ConjDesc\">If<\/span>  <span class=\"LeftOpDesc\">timeOutLog<\/span> <span class=\"OpDesc\">Contains<\/span> <span class=\"RightOpDesc\"> terminated <\/span>"},"Type":"If"},"Type":"BooleanExpression","inPage":false},"QuestionText_Unsafe":"&nbsp;","DataExportTag":"timeout","QuestionID":"QID15","DataVisibility":{"Private":false,"Hidden":false}}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID18","SecondaryAttribute":" ","TertiaryAttribute":null,"Payload":{"QuestionText":"&nbsp;","DefaultChoices":false,"DataExportTag":"terminate","QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":" ","DisplayLogic":{"0":{"0":{"LogicType":"EmbeddedField","LeftOperand":"timeOutLog","Operator":"Contains","RightOperand":"terminated","Type":"Expression","Description":"<span class=\"ConjDesc\">If<\/span>  <span class=\"LeftOpDesc\">timeOutLog<\/span> <span class=\"OpDesc\">Contains<\/span> <span class=\"RightOpDesc\"> terminated <\/span>"},"Type":"If"},"Type":"BooleanExpression","inPage":false},"ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"QuestionJS":"Qualtrics.SurveyEngine.addOnload(function()\n{\nvar that = this;\nthis.hideNextButton();\nthat.clickNextButton();\n});","DataVisibility":{"Private":false,"Hidden":false},"QuestionText_Unsafe":"&nbsp;","QuestionID":"QID18"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"QC","PrimaryAttribute":"Survey Question Count","SecondaryAttribute":"19","TertiaryAttribute":null,"Payload":null},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID7","SecondaryAttribute":"\u00a0 \u00a0","TertiaryAttribute":null,"Payload":{"QuestionText":"<div id=\"prematchText\" style=\"text-align: center;\">&nbsp;<\/div>\n\n<p>&nbsp;<\/p>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"\u00a0 \u00a0","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":1,"NextAnswerId":1,"QuestionText_Unsafe":"<div id=\"prematchText\" style=\"text-align: center;\">&nbsp;<\/div>\n\n<p>&nbsp;<\/p>","DataExportTag":"prematch","QuestionID":"QID7","QuestionJS":"\/* \n\nCopyright 2019 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published: \n\nMolnar, A. (2019). \n\u201cSMARTRIQS: A Simple Method Allowing Real-Time Respondent Interaction in Qualtrics Surveys\". \nJournal of Behavioral and Experimental Finance, 22, 161-169. doi: 10.1016\/j.jbef.2019.03.005\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\n\tvar numOthers \t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\")) - 1;\t\n\t\n\tvar loadAnimationURL = Qualtrics.SurveyEngine.getEmbeddedData(\"loadAnimationURL\");\n\tif (loadAnimationURL == \"\" || loadAnimationURL == null){\n\t\tconsole.log(\"Default loading animation applied\");\n\t\tQualtrics.SurveyEngine.setEmbeddedData(\"loadAnimationURL\",\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/b\/b1\/Loading_icon.gif\" );\n\t}\n\t\n\tvar preMatchText = Qualtrics.SurveyEngine.getEmbeddedData(\"preMatchText\");\n\tif (preMatchText == \"\" || preMatchText == null){\n\t\tconsole.log(\"Default pre-match text applied\");\n\t\tif (numOthers == 1){\n\t\t\tdocument.getElementById(\"prematchText\").innerHTML = \"<strong><span style='background-color:#AFEEEE;'>On the next screen, you will be matched with another participant.<\/span><\/strong>\";\n\t\t}\n\t\telse{\n\t\t\tdocument.getElementById(\"prematchText\").innerHTML = \"<strong><span style='background-color:#AFEEEE;'>On the next screen, you will be matched with \" + numOthers + \" other participants.<\/span><\/strong>\";\n\t\t}\n\t}\n\telse{\n\t\tconsole.log(\"Custom pre-match text applied\");\n\t\tdocument.getElementById(\"prematchText\").innerHTML = preMatchText;\n\t}\n});"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID11","SecondaryAttribute":"\u00a0 \u00a0 Remaining time: ${e:\/\/Field\/remainingTime} seconds Exit chat \u00a0 Send message","TertiaryAttribute":null,"Payload":{"QuestionText":"<p id=\"warninglog\" style=\"font-weight:bold; color:red\">&nbsp;<\/p>\n\n<div id=\"chatInstructions\">&nbsp;<\/div>\n\n<div id=\"chatHeader\">\n<div id=\"timer\" style=\"visibility: hidden;\">Remaining time: ${e:\/\/Field\/remainingTime} seconds<\/div>\n<button id=\"exitButton\" style=\"visibility: hidden;\" type=\"button\">Exit chat<\/button><\/div>\n\n<div id=\"chatDisplay\">&nbsp;<\/div>\n\n<div id=\"chatInput\"><input autocomplete=\"off\" cols=\"60\" id=\"inputField\" placeholder=\"Type message...\" rows=\"2\" size=\"60\" type=\"text\" \/><button id=\"submitButton\" type=\"button\">Send message<\/button><\/div>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"\u00a0 \u00a0 Remaining time: ${e:\/\/Field\/remainingTime} seconds Exit chat \u00a0 Send message","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":1,"NextAnswerId":1,"QuestionText_Unsafe":"<p id=\"warninglog\" style=\"font-weight:bold; color:red\">&nbsp;<\/p>\n\n<div id=\"chatInstructions\">&nbsp;<\/div>\n\n<div id=\"chatHeader\">\n<div id=\"timer\" style=\"visibility: hidden;\">Remaining time: ${e:\/\/Field\/remainingTime} seconds<\/div>\n<button id=\"exitButton\" style=\"visibility: hidden;\" type=\"button\">Exit chat<\/button><\/div>\n\n<div id=\"chatDisplay\">&nbsp;<\/div>\n\n<div id=\"chatInput\"><input autocomplete=\"off\" cols=\"60\" id=\"inputField\" placeholder=\"Type message...\" rows=\"2\" size=\"60\" type=\"text\" \/><button id=\"submitButton\" type=\"button\">Send message<\/button><\/div>","DataExportTag":"chat","QuestionID":"QID11","QuestionJS":"\/* \n\nCopyright 2019 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published: \n\nMolnar, A. (2019). \n\u201cSMARTRIQS: A Simple Method Allowing Real-Time Respondent Interaction in Qualtrics Surveys\". \nJournal of Behavioral and Experimental Finance, 22, 161-169. doi: 10.1016\/j.jbef.2019.03.005\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\nvar page = this; page.hideNextButton();\t\nconsole.log(\"Begin CHAT\");\n\n\/\/ Get DOM elements\nvar warninglog = document.getElementById(\"warninglog\");\nvar chatInstructions = document.getElementById(\"chatInstructions\");\nvar chatHeader = document.getElementById(\"chatHeader\");\nvar exitButton = document.getElementById(\"exitButton\");\nvar timer = document.getElementById(\"timer\");\nvar chatDisplay = document.getElementById(\"chatDisplay\");\nvar chatInput = document.getElementById(\"chatInput\");\nvar inputField = document.getElementById(\"inputField\");\nvar submitButton = document.getElementById(\"submitButton\");\n\n\/\/ Get parameters from Qualtrics\nif (\"${e:\/\/Field\/serverURL}\" == false) {\n\tvar serverURL = \"https:\/\/server.smartriqs.com\/php\";\n\tconsole.log(\"Default server\");\n} \nelse{\t\/\/ use custom server URL if serverURL is defined in Qualtrics\n\tvar serverURL = \"${e:\/\/Field\/serverURL}\";\n\tconsole.log(\"Custom server: \" + serverURL);\n}\t\t\t\t\nvar allowExit = (\"${e:\/\/Field\/allowExitChat}\")\nvar chatWindowWidth = parseInt(\"${e:\/\/Field\/chatWindowWidth}\");\nvar chatWindowHeight = parseInt(\"${e:\/\/Field\/chatWindowHeight}\");\nvar chatTimeFormat = \"${e:\/\/Field\/chatTimeFormat}\";\nvar allowExit = (\"${e:\/\/Field\/allowExitChat}\");\nvar timeLimit = parseInt(\"${e:\/\/Field\/chatDuration}\"); \/\/ if < 10 or NaN, there is no limit\nif (\"${e:\/\/Field\/chatName}\" == false){\t\/\/ check if chatName is defined. If not, display error message.\n\twarninglog.innerHTML = \"ERROR 014: 'chatName' is not defined. This chat will not be saved in Qualtrics. Please define 'chatName' in the Survey Flow.<br><br>\";\n}\nelse{\n\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"${e:\/\/Field\/chatName}\") == null){\n\t\twarninglog.innerHTML = \"ERROR 015: the embedded data '\" + \"${e:\/\/Field\/chatName}\" + \"' does not exist. This chat will not be saved in Qualtrics.<br><br>\";\n\t}\t\n}\n\n\/\/ Revert to default if parameters are invalid or missing\nif (isNaN(chatWindowWidth ) || chatWindowWidth < 400 || chatWindowWidth > 1200){chatWindowWidth = 600;}\nif (isNaN(chatWindowHeight) || chatWindowHeight < 240 || chatWindowHeight > 720){chatWindowHeight = 360;}\nif ([\"hms24\",\"hm24\",\"hms12\",\"hm12\",\"none\"].includes(chatTimeFormat) == false){\n\tconsole.log(\"invalid time format\");\n\tchatTimeFormat = \"none\";\n\t}\n\n\n\/\/ Initialize variables\nvar startTime = 0;\nvar remainingTime = timeLimit;\nvar exitDummy = 0;\nvar chatLog = \"\";\nvar old_chatLog = \"\";\nvar request = new httpRequest();\nrequest.method = \"GET\";\n\n\/\/ Add content & formatting to DOM elements\nif (\"${e:\/\/Field\/chatInstructions}\") {\n\tchatInstructions.innerHTML = \"${e:\/\/Field\/chatInstructions}<br><br><br>\";\n\t\n}\nelse{chatInstructions.innerHTML = \"Hit 'Enter' or the 'Send message' button to send a message.<br><br><br>\";}\n\nchatHeader.setAttribute(\"style\", \n\t\"margin: 0 auto 0 auto;\" +\n\t\"width: \" + chatWindowWidth + \"px;\" +\n\t\"display: flex;\" +\n\t\"resize: none;\" +\n\t\"justify-content: space-between;\"\n);\n\nif (isNaN(timeLimit) || timeLimit < 10 || timeLimit > 600) {allowExit = \"yes\";} else {\n\ttimer.style.visibility = \"visible\";\n\ttimer.setAttribute(\"style\",\n\t\t\"width: \" + (chatWindowWidth \/ 2) + \"px;\" +\n\t\t\"text-transform: uppercase;\" +\n\t\t\"line-height: 1;\" +\n\t\t\"padding: 8px 20px;\" +\n\t\t\"margin: 0 1em 0 auto;\" \n\t);\n\t\n\tupdateTimer();\t\/\/ Start timer\n}\n\nif (allowExit == \"yes\") {\n\texitButton.style.visibility = \"visible\";\n\texitButton.onclick = exitChat;\n\texitButton.setAttribute(\"style\",\n\t\t\"color: black;\" +\n\t\t\"border: none;\" +\n\t\t\"width: 100px;\" +\n\t\t\"font-size: 12px;\" +\n\t\t\"text-transform: uppercase;\" +\n\t\t\"line-height: 1;\" +\n\t\t\"padding: 8px 20px;\" +\n\t\t\"border-radius: 10px;\" \n\t);\n}\n\nchatDisplay.setAttribute(\"style\", \n   \"width: \" + chatWindowWidth + \"px;\" +\n   \"height: \" + chatWindowHeight + \"px;\" + \n   \"background: white;\" +\n   \"padding: 1em;\" +\n   \"overflow: auto;\" +\n   \"overflow-y: auto;\" +\n   \"resize: none;\" +\n   \"position: relative;\" +\n   \"margin: 0 auto 5px auto;\" +\n   \"box-shadow: 2px 2px 5px 2px rgba(0,0,0,0.3);\"\n);\n\nchatInput.setAttribute(\"style\", \n\t\"margin: 0 auto 0 auto;\" +\n\t\"width: \" + chatWindowWidth + \"px;\" +\n\t\"display: flex;\" +\n\t\"resize: none;\" +\n\t\"justify-content: space-between;\"\n);\n\ninputField.setAttribute(\"size\",(chatWindowWidth \/ 10));\ninputField.addEventListener('keyup', function (e) {\n    var key = e.which || e.keyCode;\n    if (key === 13) {  sendMessage();\n    }\n});\n\nsubmitButton.onclick = sendMessage;\nsubmitButton.setAttribute(\"style\",\n\t\"color: #ffffff;\" +\n    \"border: none;\" +\n\t\"width: 200px;\" +\n    \"background: #007AC0;\" +\n    \"font-size: 14px;\" +\n\t\"text-transform: uppercase;\" +\n    \"line-height: 1;\" +\n    \"padding: 8px 20px;\" +\n    \"margin: 0 auto 0em 1em;\" +\n    \"border-radius: 10px;\" \n);\n\nupdateChat(1);\t\/\/ Trigger \" .. has joined the chat\" messsage\nautoUpdate();\t\/\/ Start autoupdating chat\n\n\n\/\/ Function that calculates and displays remaining time\nfunction updateTimer() {\nsetTimeout(function () {\n\t\td = new Date();\n\t\tcurrentTime = d.getTime();\n\t\tif (startTime == 0) {startTime = currentTime;}\n\t\tremainingTime = Math.round(timeLimit - (currentTime - startTime)\/1000,0);\n\t\tremainingMinutes = Math.floor(remainingTime \/ 60);\n\t\tremainingSeconds = remainingTime % 60;\n\t\tif (remainingSeconds < 10) {remainingSeconds = \"0\" + remainingSeconds};\n \t\tif (remainingTime > 10) {timer.innerHTML = \"Remaining time: \" + remainingMinutes + \":\" + remainingSeconds; }\n\t\telse {timer.innerHTML = \"<span style='color:#FF0000;'><strong>Remaining time: \" + remainingMinutes + \":\" + remainingSeconds + \"<\/strong><\/span>\";}\n\t\t\n\t\tif (remainingTime > 0) {updateTimer();} \n\t\telse { exitChat();}\n    },  100);\t\/\/ Note that to guarantee smoother transitions, the counter is refreshed every 100 ms, istead of every 1000 ms\n}\n\n\n\/\/ Function that is called when the chat ends (either time is up or participants exits)\nfunction exitChat(){\n\texitDummy = 1;\n\tupdateChat(3); \t\/\/ Trigger \" .. has left chat\" message\n\t\n\t\/\/ Flush parameters from Qualtrics\n\tQualtrics.SurveyEngine.setEmbeddedData(\"chatWindowWidth\",\"\");\n\tQualtrics.SurveyEngine.setEmbeddedData(\"chatWindowHeight\",\"\");\n\tQualtrics.SurveyEngine.setEmbeddedData(\"allowExit\",\"\");\n\tQualtrics.SurveyEngine.setEmbeddedData(\"chatDuration\",\"\");\n\tQualtrics.SurveyEngine.setEmbeddedData(\"chatInstructions\",\"\");\t\n\t\n\tconsole.log(\"End CHAT\");\n\tpage.clickNextButton();\n}\n\n\n\/\/ Function that automaitcally updates the chat window every second, until the chat ends\nfunction autoUpdate() {\n\tsetTimeout(function () {\n\t\tupdateChat(0);\n\t\tif (exitDummy == 0) {autoUpdate();}\n    },  1000);\n}\n\n\n\/\/ Function that scrolls to the bottom of the chat window (whenever there is a new message)  \nfunction scrollToBottom () {\n\tchatDisplay.scrollTop = chatDisplay.scrollHeight - chatDisplay.clientHeight;\n}\n\t\n\n\/\/ Whenever sendMessage() is called, add new message to chat\t\nfunction sendMessage(){\n\tupdateChat(2);\n}\n\n\n\/\/ This function retrieves the chat log from the server and submits new messages if necessary.\nfunction updateChat(mode) {\n\t\/\/ This function has four 'modes':\n\t\t\/\/ Mode 0 -- UPDATE ONLY. Retrieve the most up-to-date chat log from the server and display it.\n\t\t\/\/ Mode 1 -- JOIN CHAT. Send a \" .. has joined the chat\" message to the server.\t\n\t\t\/\/ Mode 2 -- NEW MESSAGE. Send the input value to the server as a new message.\n\t\t\/\/ Mode 3 -- LEAVE CHAT. Send a \" .. has left the chat\" message to the server.\t\n\tif (mode == 0){\taddText = \"\";}\n\tif (mode == 1){\taddText = \"{{{*** Player joined ***}}}\";}\n\tif (mode == 2){\taddText = encodeURIComponent(inputField.value);\tinputField.value = \"\" ;}\n\tif (mode == 3){addText = \"{{{*** Player left ***}}}\";}\n\t\n\t\/\/ Make HTTP request\n\trequest.url = serverURL + \"\/chat.php\" +\n\t\"?researcherID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"researcherID\") + \n\t\"&studyID=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"studyID\") + \n\t\"&groupID=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"groupID\") +\n\t\"&timeZone=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"timeZone\") +\n\t\"&participantRole=\"\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"participantRole\") +\n\t\"&chatName=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"chatName\") +\n\t\"&chatTimeFormat=\"\t+ chatTimeFormat +\n\t\"&addText=\"\t\t\t+ addText;\n\t\n\t\n\tconsole.log(\"CHAT in progress...\");\n\t\/\/ Create callback for success containing the response\n\trequest.success = function(response)\n\t{\n\t\tvar resp = response;\n\t\tvar parser = new DOMParser()\n\t\tvar parsed = parser.parseFromString(resp,\"text\/html\");\n\t\told_chatLog = chatLog;\n\t\tchatLog = parsed.getElementsByTagName(\"chatLog\")[0].innerHTML;\n\t\tif (mode != 3) {\n\t\t\tchatDisplay.innerHTML = chatLog;\n\t\t\tif (chatLog != old_chatLog) {scrollToBottom();}\n\t\t}\n\t\t\/\/ Save \/ update the chat log in Qualtrics\n\t\tQualtrics.SurveyEngine.setEmbeddedData( Qualtrics.SurveyEngine.getEmbeddedData(\"chatName\"), chatLog );\n\t};\n\n\t\/\/ Create a fail callback containing the error\n\trequest.fail = function(error){console.log(error);};\n\n\t\/\/ Send requrest\n\trequest.send();\n}\n\t\n\t\n\/\/ HTTP request (AJAX) function\nfunction httpRequest()\n{\n    var ajax = null,\n        response = null,\n        self = this;\n\n    this.method = null;\n    this.url = null;\n    this.async = true;\n    this.data = null;\n\n    this.send = function()\n    {\n        ajax.open(this.method, this.url, this.async);\n        ajax.send(this.data);\n    };\n\n    if(window.XMLHttpRequest)\n    {\n        ajax = new XMLHttpRequest();\n    }\n    else if(window.ActiveXObject)\n    {\n        try\n        {\n            ajax = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch(e)\n        {\n            try\n            {\n                ajax = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch(ee)\n            {\n                self.fail(\"not supported\");\n            }\n        }\n    }\n\n    if(ajax == null)\n    {\n        return false;\n    }\n\n    ajax.onreadystatechange = function()\n    {\n        if(this.readyState == 4)\n        {\n            if(this.status == 200)\n            {\n                self.success(this.responseText);\n            }\n            else\n            {\n                self.fail(this.status + \" - \" + this.statusText);\n            }\n        }\n    };\n}\n});"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID8","SecondaryAttribute":"\u00a0 Waiting for ? participant(s) to join.","TertiaryAttribute":null,"Payload":{"QuestionText":"<div id=\"infoBox\" style=\"text-align: center;\">\n<div id=\"matchWaitText\">&nbsp;<\/div>\n<img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><br \/>\nWaiting for <span id=\"openSpots\">?<\/span> participant(s) to join.<\/div>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"\u00a0 Waiting for ? participant(s) to join.","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":1,"NextAnswerId":1,"QuestionText_Unsafe":"<div id=\"infoBox\" style=\"text-align: center;\">\n<div id=\"matchWaitText\">&nbsp;<\/div>\n<img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><br \/>\nWaiting for <span id=\"openSpots\">?<\/span> participant(s) to join.<\/div>","DataExportTag":"match","QuestionID":"QID8","QuestionJS":"\/* \n\nCopyright 2019 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published: \n\nMolnar, A. (2019). \n\u201cSMARTRIQS: A Simple Method Allowing Real-Time Respondent Interaction in Qualtrics Surveys\". \nJournal of Behavioral and Experimental Finance, 22, 161-169. doi: 10.1016\/j.jbef.2019.03.005\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\nvar page = this; page.hideNextButton();\t\t\t\t\nconsole.log(\"Begin MATCH\");\n\n\/\/ Get DOM elements\nvar infoBox = document.getElementById(\"infoBox\");\n\n\/\/ Get parameters from Qualtrics\nif (\"${e:\/\/Field\/serverURL}\" == false) {\n\tvar serverURL = \"https:\/\/server.smartriqs.com\/php\";\n\tconsole.log(\"Default server\");\n} \nelse{\t\/\/ use custom server URL if serverURL is defined in Qualtrics\n\tvar serverURL = \"${e:\/\/Field\/serverURL}\";\n\tconsole.log(\"Custom server: \" + serverURL);\n}\t\nvar maxWaitTime \t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"maxWaitTime\"));\t\n\tif (maxWaitTime > 600 || maxWaitTime < 30 || isNaN(maxWaitTime)) \t{maxWaitTime = 180;} \/\/ use default if too high or too low\nvar freezeTime \t\t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"freezeTime\"));\n\tif (freezeTime > 30 || freezeTime < 1 \t|| isNaN(freezeTime)) \t\t{freezeTime = 3;}\t\/\/ use default if too high or too low\nvar dropInactivePlayers = parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"dropInactivePlayers\"));\n\tif (dropInactivePlayers > 60 || dropInactivePlayers < 3\t|| isNaN(dropInactivePlayers)) {dropInactivePlayers = 10;}\t\/\/ use default if too high or too low\nvar botMatch \t\t= Qualtrics.SurveyEngine.getEmbeddedData(\"botMatch\");\n\tif (botMatch != \"yes\"){botMatch = \"no\";}\nvar matchWaitText = Qualtrics.SurveyEngine.getEmbeddedData(\"matchWaitText\");\n\tif (matchWaitText == \"\" || matchWaitText == null){\n\t\tconsole.log(\"Default match wait text applied\");\n\t\tdocument.getElementById(\"matchWaitText\").innerHTML =\"We are currently trying to match you with other participant(s).<br \/>Please wait patiently to be matched. This may take a few minutes.<br \/>Please do NOT&nbsp;minimize this window or navigate to another page.<br \/>\";\n\t}\n\telse{\n\t\tconsole.log(\"Custom match wait text applied\");\n\t\tdocument.getElementById(\"matchWaitText\").innerHTML = matchWaitText;\n\t}\n\t\n\t\nif (\"${e:\/\/Field\/terminateText}\" == false){\n\tvar terminateText = \"The survey has been terminated. Please contact the researcher to receive partial compensation for your participation.\";\n}\nelse{\n\tvar terminateText = \"${e:\/\/Field\/terminateText}\";\n\tconsole.log(\"Terminate text set manually: \" + terminateText);\n}\n\n\/\/ This is an experimental feature, not included in the documentation\n\t\n\t\/\/ Toggle match alert ON \/ OFF\t\t\n\t\nif (\"${e:\/\/Field\/matchAlert}\" == \"yes\"){\n\tvar matchAlert = 1;\n\tvar pageTitle = document.getElementsByTagName(\"title\")[0]; \/\/ Grab page title element\n\tvar oldTitle = pageTitle.innerHTML; \/\/ Save old title\n\tvar alertUpdateInterval = 1000;\n\tvar alertDummy = 1;\n\tconsole.log(\"Match alert turned ON\");\n}\nelse {\n\tvar matchAlert = 0;\n\tconsole.log(\"Match alert turned OFF\");\n}\n\n\t\nfunction updateAlert() {\nsetTimeout(function () {\n\t\/\/console.log(alertDummy + \" updated version 3\");\t\n \tif (alertDummy % 2 === 0 ) {\t\tpageTitle.innerHTML = \"&#9989; MATCHED! &#9989;\"; \t} \n\telse {\t\tpageTitle.innerHTML = \"&#10004; MATCHED! &#10004;\";\t}\n\t\n\t\n\t\n\tif (alertDummy < 10) {alertDummy++; updateAlert();}\n\t\/\/console.log(alertDummy);\n\t\n    },  alertUpdateInterval);\n}\t\n\t\n\t\n\/\/ end of experimental section\n\t\n\t\n\t\nconsole.log(\"Max wait time = \" + maxWaitTime + \"s | Freeze time = \" + freezeTime + \"s | Drop inactive = \" + dropInactivePlayers + \"s | BOT match = \" + botMatch);\n\n\/\/ Initiate variables\nvar timeOut \t\t= \"no\";\nvar attemptCount \t= 1;\nvar errorCount \t\t= 0;\nvar status \t\t\t= \"\";\nvar request \t\t= new httpRequest();\nrequest.method \t\t= \"GET\";\n\nattemptMatch();\n\n\n\/\/ Function that attempt matching\nfunction attemptMatch() {\n\tsetTimeout(function () {\n\t\tmakeRequest();\n\t\tconsole.log(\"Attempt = \" + attemptCount + \" | Status = \" + status);\n\t\tif (attemptCount == maxWaitTime) {timeOut = \"yes\";}\n\t\tif (status == \"matched\" && attemptCount >= freezeTime){\t\n\t\t\tconsole.log(\"End MATCH\");\n\n\t\t\tif (bots.length < 1){\n\t\t\t\tconsole.log(\"Matched with other participant(s)\");\n\t\t\t\tif (matchAlert == 1) {\n\t\t\t\t\tupdateAlert();\n\t\t\t\t\t\/\/ alert(\"Successfully matched!\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") == 2){\n\t\t\t\t\tinfoBox.innerHTML = \"You have been successfully matched with another participant.\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tinfoBox.innerHTML = \"You have been successfully matched with \" + (Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") - 1) + \" other participants.\";\n\t\t\t\t}\n\t\t\t\tsetTimeout(function () {page.showNextButton();}, 1000 * freezeTime);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (botMatch == \"yes\"){\n\t\t\t\t\tconsole.log(\"Matched with BOT(s)\");\n\t\t\t\t\tif (matchAlert == 1) {\n\t\t\t\t\t\tupdateAlert();\n\t\t\t\t\t\t\/\/ alert(\"Matched with BOT(s).\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbotArray = bots.split(\",\");\t\n\t\t\t\t\tnumBots = botArray.length;\n\t\t\t\t\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") == 2){\n\t\t\t\t\t\tinfoBox.innerHTML = \"Unfortunately, there is no one else available.<br><br>You have been matched with a BOT.\";\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tinfoBox.innerHTML = \"Unfortunately, there are not enough other participants available.<br><br>You have been matched with \" + (Qualtrics.SurveyEngine.getEmbeddedData(\"groupSize\") - 1 - numBots) + \" other participant(s) and \" + numBots + \" BOT(s).\";\n\t\t\t\t\t}\n\t\t\t\t\tsetTimeout(function () {page.showNextButton();}, 1000 * freezeTime);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"No available participant -- Survey terminated\");\n\t\t\t\t\tif (matchAlert == 1) {alert(\"Survey terminated.\");}\n\t\t\t\t\t\n\t\t\t\t\tinfoBox.innerHTML = \"Unfortunately, there are not enough other participants available.<br><br>\" + terminateText;\n\t\t\t\t\tQualtrics.SurveyEngine.setEmbeddedData( \"timeOutLog\", \"No available participant -- Survey terminated\" );\n\t\t\t\t\tsetTimeout(function () {page.showNextButton();}, 2000 * freezeTime);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\/\/ Check if there was any error. If yes, display and stop matching\n\t\t\tif (status.includes(\"ERROR\") == true){\tinfoBox.innerHTML = status;} \n\t\t\telse{attemptCount++;\tattemptMatch(); } \/\/ Otherwise, keep trying to match\n\t\t}\n\t},  1000);\n}\n\n\n\/\/ Function that sends data to server\nfunction makeRequest() {\n\trequest.url = serverURL + \"\/match.php\" +\n\t\"?researcherID=\" \t\t\t+\tQualtrics.SurveyEngine.getEmbeddedData(\"researcherID\") + \n\t\"&studyID=\" \t\t\t\t+\tQualtrics.SurveyEngine.getEmbeddedData(\"studyID\") +\n\t\"&participantID=\" \t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"participantID\") + \n\t\"&groupSize=\" \t\t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"groupSize\")  + \n\t\"&numStages=\" \t\t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"numStages\") + \n\t\"&conditions=\" \t\t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"conditions\") + \n\t\"&participantCondition=\"\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"participantCondition\") + \n\t\"&roles=\" \t\t\t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"roles\") + \n\t\"&participantRole=\" \t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"participantRole\") + \n\t\"&timeZone=\" \t\t\t\t+ \tQualtrics.SurveyEngine.getEmbeddedData(\"timeZone\") +\n\t\"&dropInactivePlayers=\" \t+ \tdropInactivePlayers + \n\t\"&timeOut=\" \t\t\t\t+ \ttimeOut + \n\t\"&timeOutLog=\" \t\t\t\t+ \tString(Qualtrics.SurveyEngine.getEmbeddedData(\"timeOutLog\"));\n\t\n\tconsole.log(\"Request made\");\n\t\n\t\/\/ Create callback for success containing the response\n\trequest.success = function(response)\n\t{\n\t\tconsole.log(\"Request success!\");\n\t\tvar resp = response;\n\t\tvar parser = new DOMParser()\n\t\tvar parsed = parser.parseFromString(resp,\"text\/html\");\n\t\tstatus = \t\t\t\tparsed.getElementsByTagName(\"status\")[0].innerHTML;\n\t\tgroupID = \t\t\t\tparsed.getElementsByTagName(\"groupID\")[0].innerHTML;\n\t\tparticipantCondition = \tparsed.getElementsByTagName(\"participantCondition\")[0].innerHTML;\n\t\tparticipantRole = \t\tparsed.getElementsByTagName(\"participantRole\")[0].innerHTML;\n\t\topenSpots = \t\t\tparsed.getElementsByTagName(\"openSpots\")[0].innerHTML;\n\t\tbots =\t\t \t\t\tparsed.getElementsByTagName(\"bots\")[0].innerHTML;\n\t\terrorCount = \t\t\tparsed.getElementsByTagName(\"errorCount\")[0].innerHTML;\n\t\ttimeOutLog = \t\t\tparsed.getElementsByTagName(\"timeOutLog\")[0].innerHTML;\n\n\t\t\/\/ Save retrieved values to Qualtrics\n\t\tQualtrics.SurveyEngine.setEmbeddedData( 'groupID', \t\t\t\tgroupID );\n\t\tQualtrics.SurveyEngine.setEmbeddedData( 'participantCondition', participantCondition );\n\t\tQualtrics.SurveyEngine.setEmbeddedData( 'participantRole', \t\tparticipantRole );\t\n\t\tQualtrics.SurveyEngine.setEmbeddedData( 'timeOutLog', \t\t\ttimeOutLog );\t\n\t\n\t\t\/\/ Update \"waiting for ... participants\" message\n\t\tdocument.getElementById(\"openSpots\").innerHTML \t= openSpots;\n\t};\n\n\t\/\/ Create a fail callback containing the error\n\trequest.fail = function(error){console.log(error);};\n\n\t\/\/ Send request\n\trequest.send();\n}\n\n\n\/\/ HTTP request (AJAX)\nfunction httpRequest()\n{\n    var ajax = null,\n        response = null,\n        self = this;\n\n    this.method = null;\n    this.url = null;\n    this.async = true;\n    this.data = null;\n\n    this.send = function()\n    {\n        ajax.open(this.method, this.url, this.asnyc);\n        ajax.send(this.data);\n    };\n\n    if(window.XMLHttpRequest)\n    {\n        ajax = new XMLHttpRequest();\n    }\n    else if(window.ActiveXObject)\n    {\n        try\n        {\n            ajax = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch(e)\n        {\n            try\n            {\n                ajax = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch(ee)\n            {\n                self.fail(\"not supported\");\n            }\n        }\n    }\n\n    if(ajax == null)\n    {\n        return false;\n    }\n\n    ajax.onreadystatechange = function()\n    {\n        if(this.readyState == 4)\n        {\n            if(this.status == 200)\n            {\n                self.success(this.responseText);\n            }\n            else\n            {\n                self.fail(this.status + \" - \" + this.statusText);\n            }\n        }\n    };\n}\n\n\n});"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID16","SecondaryAttribute":"\u00a0 Waiting for ? participant(s).","TertiaryAttribute":null,"Payload":{"QuestionText":"<div id=\"infoBox\" style=\"text-align: center;\">\n<div id=\"getWaitText\">&nbsp;<\/div>\n<img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><br \/>\nWaiting for <span id=\"missingValues\">?<\/span> participant(s).<\/div>","QuestionJS":"\/* \n\nCopyright 2019 Andras Molnar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software \nand associated documentation files (the \"Software\"), to deal in the Software without \nrestriction, including without limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or \nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING \nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThe licensee undertakes to mention the name SMARTRIQS, the name of the licensor (Andras Molnar) \nand to cite the following article in all publications in which results of experiments conducted \nwith the Software are published:\n\nMolnar, A. (2019). \n\u201cSMARTRIQS: A Simple Method Allowing Real-Time Respondent Interaction in Qualtrics Surveys\". \nJournal of Behavioral and Experimental Finance, 22, 161-169. doi: 10.1016\/j.jbef.2019.03.005\n\n*\/\n\nQualtrics.SurveyEngine.addOnload(function()\n{\nvar page = this; page.hideNextButton ();\t\t\t\t\nconsole.log(\"Begin GET\");\n\n\/\/ Get parameters from Qualtrics\nif (\"${e:\/\/Field\/serverURL}\" == false) {\n\tvar serverURL = \"https:\/\/server.smartriqs.com\/php\";\n\tconsole.log(\"Default server\");\n} \nelse{\t\/\/ use custom server URL if serverURL is defined in Qualtrics\n\tvar serverURL = \"${e:\/\/Field\/serverURL}\";\n\tconsole.log(\"Custom server: \" + serverURL);\n}\t\n\nvar maxWaitTime \t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"maxWaitTime\"));\t\n\tif (maxWaitTime > 600 || maxWaitTime < 30 || isNaN(maxWaitTime)) \t{maxWaitTime = 180;} \/\/ use default if too high or too low\nvar freezeTime \t\t= parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"freezeTime\"));\n\tif (freezeTime > 30 || freezeTime < 1 \t|| isNaN(freezeTime)) \t\t{freezeTime = 3;}\t\/\/ use default if too high or too low\nconsole.log(\"Max wait time = \" + maxWaitTime + \"s | Freeze time = \" + freezeTime + \"s\");\nvar getWaitText = Qualtrics.SurveyEngine.getEmbeddedData(\"getWaitText\");\n\tif (getWaitText == \"\" || getWaitText == null){\n\t\tconsole.log(\"Default get wait text applied: blank\");\n\t}\n\telse{\n\t\tconsole.log(\"Custom get wait text applied\");\n\t\tdocument.getElementById(\"getWaitText\").innerHTML =getWaitText;\n\t}\n\t\n\t\n\/\/ Initialize variables\nvar request = new httpRequest();\nrequest.method = \"GET\";\nvar roles \t\t\t\t= Qualtrics.SurveyEngine.getEmbeddedData(\"roles\");\nvar rolesArray\t\t\t= roles.split(\",\");\nvar retrievedValue \t\t= [];\nvar participantValue\t= null;\nvar attemptCount \t\t= 1;\nvar timeOut \t\t\t= \"no\";\nvar terminate \t\t\t= \"no\";\nvar status \t\t\t\t= null;\nvar missingValues \t\t= 0;\nvar errorCount \t\t\t= 0;\nvar errorLog \t\t\t= \"\";\n\nif (\"${e:\/\/Field\/terminateText}\" == false){\n\tvar terminateText = \"The survey has been terminated. Please contact the researcher to receive partial compensation for your participation.\";\n}\nelse{\n\tvar terminateText = \"${e:\/\/Field\/terminateText}\";\n\tconsole.log(\"Terminate text set manually: \" + terminateText);\n}\n\nif (\"${e:\/\/Field\/getData}\" == false){\n\terrorCount++;\n\tvar numValuesToGet = 0;\n\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 009: Value to be retrieved is missing.\";\n}\nelse{\n\tvar getData\t\t\t\t= Qualtrics.SurveyEngine.getEmbeddedData(\"getData\");\n\tvar getDataArray \t\t= getData.split(\",\");\n\tvar numValuesToGet\t\t= getDataArray.length;\n}\n\nif (\"${e:\/\/Field\/saveData}\" == false){\n\terrorCount++;\n\tvar numValuesToSave = 0;\n\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 016: Unable to save retrieved value -- embedded data for saving was not defined.\";\n}\nelse{\n\tvar saveData\t\t\t= Qualtrics.SurveyEngine.getEmbeddedData(\"saveData\");\n\tvar saveDataArray \t\t= saveData.split(\",\");\n\tvar numValuesToSave\t\t= saveDataArray.length;\n}\n\nif (\"${e:\/\/Field\/defaultData}\" == false){\n\t\/\/ If no default is provided, check if botMatch is set. If yes, display error message.\n\tif (\"${e:\/\/Field\/botMatch}\" == \"yes\"){\n\t\terrorCount++;\n\t\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 017: Missing default data. Default data must be defined when using BOTs.\";\n\t\tconsole.log(\"Missing default data error\");\n\t}\n\t\/\/ ...Otherwise, terminate survey if timed out --> this must not be empty if BOT is set\n\telse{\n\t\tvar defaultDataArray = [];\n\t\tfor (i = 0; i < numValuesToGet; i++){\n\t\t\tdefaultDataArray[i] = \"terminated\";\n\t\t}\n\t\tvar defaultData\t\t\t= defaultDataArray.toString();\n\t\tvar numDefaultValues \t= numValuesToGet;\n\t\tconsole.log(\"Terminate if timed out\");\n\t}\n}\nelse{\n\tvar defaultData \t\t= Qualtrics.SurveyEngine.getEmbeddedData(\"defaultData\");\n\tvar defaultDataArray\t= defaultData.split(\",\");\n\tvar numDefaultValues\t= defaultDataArray.length;\n\tconsole.log(\"Use default response(s) if timed out: \" + defaultDataArray);\n}\n\n\/\/ Check for incorrect \/ mismatching input data:\nfor (i = 0; i < numValuesToGet; i++){\n\tif (rolesArray.includes(getDataArray[i]) == false){\n\t\terrorCount++;\n\t\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 205: The value(s) to be retrieved (\" + getData + \") do not match the roles defined for this study (\" + roles + \").\";\n\t\tbreak;\n\t}\n}\n\nif (numDefaultValues != numValuesToGet){\n\terrorCount++;\n\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 206: The number of default responses (\" + numDefaultValues + \") does not match the number of responses to be retrieved (\" + numValuesToGet + \").<\/p>\";\n}\n\nif (numValuesToGet != numValuesToSave){\n\terrorCount++;\n\tstatus = status + \"<p style='font-weight:bold; color:red'>ERROR 207: The number of responses to be retrieved (\" + numValuesToGet + \") does not match the number of responses to be saved (\" + numValuesToSave + \").<\/p>\";\n}\n\nconsole.log(\"Num retrieved | saved | default: \" + numValuesToGet + \" | \" + numValuesToSave + \" | \" + numDefaultValues);\n\n\/\/ If there are no errors, get data, otherwise display error message\nif (errorCount ==0 ) {\n\tattemptGet();\n}\nelse {\n\tdocument.getElementById(\"infoBox\").innerHTML = status;\n}\n\n\n\/\/ Function that attempts to retrieve values\nfunction attemptGet() {\n\tsetTimeout(function () {\n\t\tif (attemptCount == maxWaitTime) {timeOut = \"yes\";}\n\t\tmakeRequest();\n\t\tconsole.log(\"Attempt = \" + attemptCount + \" | Status = \" + status);\n\t\tif (status == \"ready\" && attemptCount >= freezeTime){\n\t\t\tconsole.log(\"Concluding GET...\");\n\t\t\tif (terminate == \"yes\"){\n\t\t\t\tconsole.log(\"Timed out -- survey terminated\");\n\t\t\t\tdocument.getElementById(\"infoBox\").innerHTML = timeOutResponsesLog + \"<br><br>\" + terminateText;\n\t\t\t\tsetTimeout(function () {page.showNextButton();}, 2000 * freezeTime);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"operation\")) {runOperations();}\n\t\t\t\tif (errorCount == 0){\n\t\t\t\t\tif (timeOut == \"yes\"){\n\t\t\t\t\t\tconsole.log(\"GET successful -- default response(s)\")\n\t\t\t\t\t\tdocument.getElementById(\"infoBox\").innerHTML = timeOutResponsesLog;  \n\t\t\t\t\t\tsetTimeout(function () {page.showNextButton();}, 1000 * freezeTime);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tconsole.log(\"GET successful\");\n\t\t\t\t\t\tpage.clickNextButton();\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\telse {\n\t\t\/\/ Check if there was any error. If yes, display it and stop the experiment\n\t\t\tif (status.includes(\"ERROR\") == true){\tdocument.getElementById(\"infoBox\").innerHTML = status;\tconsole.log(\"Display errors\");}\n\t\t\telse{attemptCount++;attemptGet();}\t\/\/ ...otherwise, keep trying\n\t\t}\n\t},  1000);\n}\n\n\n\/\/ Function that makes the request\nfunction makeRequest() {\n\t\n\trequest.url = serverURL + \"\/get.php\" +\n\t\"?researcherID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"researcherID\") + \n\t\"&studyID=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"studyID\") + \n\t\"&participantID=\" \t+ Qualtrics.SurveyEngine.getEmbeddedData(\"participantID\") + \n\t\"&numStages=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"numStages\") + \n\t\"&getStage=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"getStage\") + \n\t\"&timeZone=\" \t\t+ Qualtrics.SurveyEngine.getEmbeddedData(\"timeZone\") +\t\t\n\t\"&roles=\" \t\t\t+ roles + \n\t\"&getValue=\" \t\t+ getData + \n\t\"&defaultValue=\" \t+ defaultData + \n\t\"&timeOut=\" \t\t+ timeOut + \n\t\"&timeOutLog=\" \t\t+ String(Qualtrics.SurveyEngine.getEmbeddedData(\"timeOutLog\"));\n\t\n\t\/\/ Create callback for success containing the response\n\trequest.success = function(response)\n\t{\n\t\tvar resp \t\t\t= response;\n\t\tvar parser \t\t\t= new DOMParser()\n\t\tvar parsed \t\t\t= parser.parseFromString(resp,\"text\/html\");\n\t\tstatus \t\t\t\t= parsed.getElementsByTagName(\"status\")[0].innerHTML;\n\t\tmissingValues \t\t= parsed.getElementsByTagName(\"missingValues\")[0].innerHTML;\n\t\ttimeOutResponsesLog = parsed.getElementsByTagName(\"timeOutResponsesLog\")[0].innerHTML;\n\t\ttimeOutLog \t\t\t= parsed.getElementsByTagName(\"timeOutLog\")[0].innerHTML;\n\t\tparticipantValue\t= parsed.getElementsByTagName(\"participantValue\")[0].innerHTML;\n\t\tif (timeOutResponsesLog.length > 0 ){timeOut = \"yes\";}\n\t\t\n\t\t\/\/ Save responses as Qualtrics embedded variables\n\t\tQualtrics.SurveyEngine.setEmbeddedData( \"timeOutLog\", timeOutLog );\t\n\t\t\n\t\tif (status.includes(\"ERROR\") == false){\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < numValuesToSave; i++){\n\t\t\t\tretrievedValue[i] = parsed.getElementsByTagName(\"retrievedValue\" + i)[0].innerHTML;\n\t\t\t\tif (retrievedValue[i] == \"terminated\"){\n\t\t\t\t\tterminate = \"yes\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tQualtrics.SurveyEngine.setEmbeddedData( saveDataArray[i], retrievedValue[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tdocument.getElementById(\"missingValues\").innerHTML \t= missingValues;\n\t\t}\t\t\t\n\t};\n\n\t\/\/ Create a fail callback containing the error\n\trequest.fail = function(error)\t{console.log(error);};\n\n\t\/\/ Send request\n\trequest.send();\n}\n\n\n\/\/ HTTP request (AJAX)\nfunction httpRequest()\n{\n    var ajax = null,\n        response = null,\n        self = this;\n\n    this.method = null;\n    this.url = null;\n    this.async = true;\n    this.data = null;\n\n    this.send = function()\n    {\n        ajax.open(this.method, this.url, this.asnyc);\n        ajax.send(this.data);\n    };\n\n    if(window.XMLHttpRequest)\n    {\n        ajax = new XMLHttpRequest();\n    }\n    else if(window.ActiveXObject)\n    {\n        try\n        {\n            ajax = new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n        }\n        catch(e)\n        {\n            try\n            {\n                ajax = new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch(ee)\n            {\n                self.fail(\"not supported\");\n            }\n        }\n    }\n\n    if(ajax == null)\n    {\n        return false;\n    }\n\n    ajax.onreadystatechange = function()\n    {\n        if(this.readyState == 4)\n        {\n            if(this.status == 200)\n            {\n                self.success(this.responseText);\n            }\n            else\n            {\n                self.fail(this.status + \" - \" + this.statusText);\n            }\n        }\n    };\n}\n\n\n\/\/ Function that calls operations if necessary\nfunction runOperations(){\n\tconsole.log(\"Running operations...\");\n\tcheckNumberInput(retrievedValue);\n\t\n\tvar validOperations = [\"min\",\"max\",\"sum\",\"average\",\"rank\",\"rankTie\",\"secondMax\",\"accuracyRank\",\"p-BeautyRank\"];\n\tvar operationArray = [];\n\tvar operationResult = 0;\n\tvar saveOperationArray = [];\n\tvar decimalPlaces = 2;\n\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"decimalPlaces\")) {decimalPlaces = Qualtrics.SurveyEngine.getEmbeddedData(\"decimalPlaces\");}\n\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"operation\")) {\toperationArray\t= Qualtrics.SurveyEngine.getEmbeddedData(\"operation\").split(\",\");}\n\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"saveOperation\")) {\tsaveOperationArray\t= Qualtrics.SurveyEngine.getEmbeddedData(\"saveOperation\").split(\",\");}\n\n\tif (operationArray.length ==  saveOperationArray.length){\t\n\t\tvar numOperations = operationArray.length;\n\t\t\n\t\tfor (i = 0; i < numOperations; i++){\n\t\t\tif (validOperations.includes(operationArray[i]) == true){\n\t\t\t\tif (operationArray[i] == \"max\")\t\t\t{ operationResult = Math.max.apply(Math, retrievedValue);}\n\t\t\t\tif (operationArray[i] == \"secondMax\")\t{ operationResult = getSecondMax(retrievedValue);}\n\t\t\t\tif (operationArray[i] == \"min\")\t\t\t{ operationResult = Math.min.apply(Math, retrievedValue);}\n\t\t\t\tif (operationArray[i] == \"sum\")\t\t\t{ operationResult = getSum(retrievedValue);}\n\t\t\t\tif (operationArray[i] == \"average\")\t\t{ operationResult = (getSum(retrievedValue) \/ retrievedValue.length);}\n\t\t\t\tif (operationArray[i] == \"rank\")\t\t{ operationResult = getRank(participantValue,retrievedValue);}\n\t\t\t\tif (operationArray[i] == \"accuracyRank\"){ operationResult = getAccuracyRank(participantValue,retrievedValue,parseFloat(Qualtrics.SurveyEngine.getEmbeddedData(\"targetValue\")));}\n\t\t\t\tif (operationArray[i] == \"p-BeautyRank\"){ operationResult = getPBeautyRank(participantValue,retrievedValue);}\n\t\t\t\t\n\t\t\t\toperationResult = Math.round(operationResult*Math.pow(10,decimalPlaces))\/ Math.pow(10,decimalPlaces);\n\t\t\t\tQualtrics.SurveyEngine.setEmbeddedData(saveOperationArray[i], operationResult);\n\t\t\t}\n\t\t\telse{\n\t\t\t\terrorCount++;\n\t\t\t\terrorLog = errorLog + \"ERROR 110: Invalid operation: \" + operationArray[i] +\n\t\t\t\t\"<br>Operation must be one of the following: \" + validOperations + \". Operations are case sensitive.<br><br>\";\n\t\t\t}\t\n\t\t}\n\t}\n\t\n\telse {\n\t\terrorCount++;\n\t\terrorLog = errorLog + \"ERROR 208: The number of operations does not match the number of operation results to be saved.\" +\n\t\t\"<br><br>\" + operationArray.length + \" operations: \" + operationArray + \n\t\t\"<br>\" + saveOperationArray.length + \" operation results: \" + saveOperationArray + \n\t\t\"<br><br>\";\n\t}\n\n\t\n\t\/\/ Allow next button only if no error\n\tif (errorCount == 0){\n\t\t\/\/ Flush operations from qualtrics to prevent carry over to next GET blcok\n\t\tQualtrics.SurveyEngine.setEmbeddedData(\"operation\", \"\");\n\t\tQualtrics.SurveyEngine.setEmbeddedData(\"saveOperation\", \"\");\n\t\t\/\/Qualtrics.SurveyEngine.setEmbeddedData(\"targetValue\", \"\");\n\t\t\/\/Qualtrics.SurveyEngine.setEmbeddedData(\"breakTie\", \"\");\n\t}\n\telse {\n\t\tdocument.getElementById(\"infoBox\").innerHTML = \"<p style='font-weight:bold; color:red'>\" + errorLog + \"<\/p>\";\n\t}\n}\n\n\n\/\/ This function checks if input values are numbers\nfunction checkNumberInput(values){\n\tfor (j = 0; j < values.length; j++){\n\t\tif (isNaN(values[j]) == true){\n\t\t\terrorCount++;\n\t\t\terrorLog = errorLog + \"ERROR 109: Invalid input for operation: \" + \n\t\t\tvalues[j] +\t\"<br>Input must be a number.\" +\t\"<br><br>\";\n\t\t}\n\t}\n}\n\n\n\/\/ SUM function\nfunction getSum(values){\n\tvar sum = 0;\n\tfor (k = 0; k < values.length; k++){sum = sum + parseFloat(values[k]);}\n\treturn sum;\t\n}\n\n\n\/\/ RANK function\nfunction getRank(thisValue, values){\n\tif (thisValue){\n\t\tvar rank = 1;\n\t\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"breakTie\")) {var breakTie = Qualtrics.SurveyEngine.getEmbeddedData(\"breakTie\");}\n\t\tvar tieBreakerDummy = parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"groupID\")) % 2;\n\t\tvar getDataArray = Qualtrics.SurveyEngine.getEmbeddedData(\"getData\").split(\",\");\n\t\tvar participantRole = Qualtrics.SurveyEngine.getEmbeddedData(\"participantRole\");\n\t\tvar participantPosition = getDataArray.indexOf(participantRole);\n\t\t\n\t\tfor (k = 0; k < values.length; k++){\n\t\t\tif (k != participantPosition){\n\t\t\t\tif (parseFloat(values[k]) > parseFloat(thisValue)){rank++;}\n\t\t\t\tif (parseFloat(values[k]) == parseFloat(thisValue) && breakTie == \"yes\"){\n\t\t\t\t\tif ((participantPosition > k && tieBreakerDummy == 0) || (participantPosition < k && tieBreakerDummy == 1)){rank++;}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn rank;\n\t}\n\telse {\n\t\terrorCount++;\n\t\terrorLog = errorLog + \"ERROR 011: Participant data is missing.<br>Make sure to include '\" + \n\t\tQualtrics.SurveyEngine.getEmbeddedData(\"participantRole\") + \"' in the 'getRole' parameter in Qualtrics.<br><br>\";\n\t\treturn null;\n\t}\n}\n\n\n\/\/ SECONDMAX function\nfunction getSecondMax(values){\n\tvar max = Math.max.apply(Math,values);\n\tmaxIndex = values.indexOf(String(max));\n\tvalues[maxIndex] = -Infinity;\n\tvar secondmax = Math.max.apply(Math,values);\n\tvalues[maxIndex] = max;\n\treturn secondmax;\n}\n\n\n\/\/ ACCURACY RANK function\nfunction getAccuracyRank(thisValue,values,target){\n\tif (thisValue){\n\t\tvar accuracyArray = [];\n\t\tvar rank = 1;\n\t\t\n\t\tif (target){\n\t\t\tfor (n = 0; n < values.length; n++){\n\t\t\t\taccuracyArray[n] = Math.abs(parseFloat(values[n]) - target);\n\t\t\t}\n\t\t\t\n\t\t\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"breakTie\")) {var breakTie = Qualtrics.SurveyEngine.getEmbeddedData(\"breakTie\");}\n\t\t\tvar tieBreakerDummy = parseInt(Qualtrics.SurveyEngine.getEmbeddedData(\"groupID\")) % 2;\n\t\t\tvar getDataArray = Qualtrics.SurveyEngine.getEmbeddedData(\"getData\").split(\",\");\n\t\t\tvar participantRole = Qualtrics.SurveyEngine.getEmbeddedData(\"participantRole\");\n\t\t\tvar participantPosition = getDataArray.indexOf(participantRole);\n\t\t\t\n\t\t\tfor (k = 0; k < values.length; k++){\n\t\t\t\tif (k != participantPosition){\n\t\t\t\t\tif (parseFloat(accuracyArray[participantPosition]) > accuracyArray[k]){rank++;}\n\t\t\t\t\tif (parseFloat(accuracyArray[participantPosition]) == accuracyArray[k] && breakTie == \"yes\"){\n\t\t\t\t\t\tif ((participantPosition > k && tieBreakerDummy == 0) || (participantPosition < k && tieBreakerDummy == 1)){rank++;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn rank;\n\t\t}\n\t\telse{\n\t\t\terrorCount++;\n\t\t\terrorLog = errorLog + \"ERROR 012: Cannot calculate accuracies -- target value is missing.<br><br>\";\n\t\t\treturn null;\n\t\t}\t\t\n\t}\n\telse {\n\t\terrorCount++;\n\t\terrorLog = errorLog + \"ERROR 011: Participant data is missing.<br>Make sure to include '\" + \n\t\tQualtrics.SurveyEngine.getEmbeddedData(\"participantRole\") + \"' in the 'getData' embedded data in Qualtrics.<br><br>\";\n\t\treturn null;\n\t}\n}\n\n\n\/\/ p-BEAUTY RANK function\nfunction getPBeautyRank(thisValue,values){\n\tif (Qualtrics.SurveyEngine.getEmbeddedData(\"p-BeautyFraction\")){\n\t\tvar fraction = Qualtrics.SurveyEngine.getEmbeddedData(\"p-BeautyFraction\");\n\t\tvar averageGuess = getSum(values) \/ values.length;\n\t\tvar beautyTarget = averageGuess * fraction;\n\t\treturn getAccuracyRank(thisValue,values,beautyTarget);\n\t}\n\telse{\n\t\terrorCount++;\n\t\terrorLog = errorLog + \"ERROR 013: Cannot calculate P-beauty accuracies: the p-beauty fraction is missing. This should be a number between 0 and 1.<br><br>\";\n\t\treturn null;\n\t}\n}\n});","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"\u00a0 Waiting for ? participant(s).","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"DataVisibility":{"Private":false,"Hidden":false},"QuestionText_Unsafe":"<div id=\"infoBox\" style=\"text-align: center;\">\n<div id=\"getWaitText\">&nbsp;<\/div>\n<img alt=\"Image: Loading animation\" height=\"198\" src=\"${e:\/\/Field\/loadAnimationURL}\" style=\"text-align: center; height: 198px; width: 300px;\" width=\"300\" \/><br \/>\nWaiting for <span id=\"missingValues\">?<\/span> participant(s).<\/div>","DataExportTag":"get","QuestionID":"QID16"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"RS","PrimaryAttribute":"RS_9NBbEqtJwK7ifBj","SecondaryAttribute":"Default Response Set","TertiaryAttribute":null,"Payload":null},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID19","SecondaryAttribute":"Participants read the detailed instructions for the chat on this screen.\u00a0 They can take as much t..","TertiaryAttribute":null,"Payload":{"QuestionText":"Participants read the detailed instructions for the chat on this screen.&nbsp;<div><br><\/div><div>They can take as much time as needed.&nbsp;<div><br><\/div><div><br><\/div><div>After they finish reading the instructions, they enter a waiting room (next page). Once both participants are in the waiting room, they proceed to the chat.<\/div><\/div>","DefaultChoices":false,"DataExportTag":"instructions","QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"Participants read the detailed instructions for the chat on this screen.\u00a0 They can take as much t...","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"QuestionID":"QID19","DataVisibility":{"Private":false,"Hidden":false}}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID12","SecondaryAttribute":"The chat has ended.","TertiaryAttribute":null,"Payload":{"QuestionText":"<div style=\"text-align: center;\">The chat has ended.<\/div>","DefaultChoices":false,"QuestionType":"DB","Selector":"TB","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"The chat has ended.","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"DataVisibility":{"Private":false,"Hidden":false},"QuestionText_Unsafe":"<div style=\"text-align: center;\">The chat has ended.<\/div>","DataExportTag":"chat end","QuestionID":"QID12"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID9","SecondaryAttribute":"Timing","TertiaryAttribute":null,"Payload":{"QuestionText":"Timing","DefaultChoices":false,"QuestionType":"Timing","Selector":"PageTimer","Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"Timing","Choices":{"1":{"Display":"First Click"},"2":{"Display":"Last Click"},"3":{"Display":"Page Submit"},"4":{"Display":"Click Count"}},"GradingData":[],"Language":[],"DataVisibility":{"Private":false,"Hidden":false},"NextChoiceId":33,"NextAnswerId":1,"QuestionText_Unsafe":"Timing","DataExportTag":"match timer","QuestionID":"QID9"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID17","SecondaryAttribute":"Timing","TertiaryAttribute":null,"Payload":{"QuestionText":"Timing","DefaultChoices":false,"QuestionType":"Timing","Selector":"PageTimer","Configuration":{"QuestionDescriptionOption":"UseText","MinSeconds":"0","MaxSeconds":"0"},"QuestionDescription":"Timing","Choices":{"1":{"Display":"First Click"},"2":{"Display":"Last Click"},"3":{"Display":"Page Submit"},"4":{"Display":"Click Count"}},"GradingData":[],"Language":[],"NextChoiceId":44,"NextAnswerId":1,"QuestionText_Unsafe":"Timing","DataExportTag":"get timer","DataVisibility":{"Private":false,"Hidden":false},"QuestionID":"QID17"}},{"SurveyID":"SV_efcvIBK5m2Bdfgx","Element":"SQ","PrimaryAttribute":"QID6","SecondaryAttribute":"Tip: open this survey in 2 tabs \/ on 2 devices.Single-stage chat with waiting room before the cha...","TertiaryAttribute":null,"Payload":{"QuestionText":"<span style=\"color:#008080;\">Tip: open this survey in 2 tabs \/ on 2 devices.<\/span><br \/>\n<br \/>\n<br \/>\n<u><strong>Single-stage chat with waiting room before the chat<\/strong><\/u><br \/>\n<br \/>\n1. Participants are matched in pairs.<br \/>\n<br \/>\n2. Participants read instructions at their own pace.\n<div>&nbsp;\n<div>3. When finished reading instructions, participants enter a waiting room and wait for their partner.<br \/>\n<br \/>\n4. Once&nbsp;both participants are in&nbsp;the waiting room, they proceed to the chat. Participants can chat with their partner (no time limit).<\/div>\n\n<div>&nbsp;<\/div>\n\n<div>5. The experiment concludes.<\/div>\n<\/div>","DefaultChoices":false,"DataExportTag":"instructions","QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"Tip: open this survey in 2 tabs \/ on 2 devices.Single-stage chat with waiting room before the cha...","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1,"QuestionID":"QID6"}}]}